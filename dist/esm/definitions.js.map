{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from '@capacitor/core';\r\nexport interface ScreenRecorderPlugin {\r\n\r\n  start(options:any):Promise<any>;\r\n\r\n  stop(options:any):Promise<any>;\r\n\r\n  recorder_status(options:any):Promise<any>;\r\n\r\n  addListener(\r\n    eventName: 'onRecordingStarted',\r\n    listenerFunc: (data: any) => {\r\n      status : true,\r\n      message : \"Recording Started\"\r\n    },\r\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\r\n\r\n  addListener(\r\n    eventName: 'onRecordingComplete',\r\n    listenerFunc: (data: any) => {\r\n      status : true,\r\n      message : \"Recording Stopped\",\r\n      file_name : \"2023-08-25-10-10-10.mp4\",\r\n      file_path : \"/storage/emulated/0/Movies/ScreenRecordings/2023-08-25-10-10-10.mp4\"\r\n    },\r\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\r\n\r\n  addListener(\r\n    eventName: 'onRecordingError',\r\n    listenerFunc: (data: any) => {\r\n      status : false,\r\n      message : \"Error Message\"\r\n    },\r\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\r\n}\r\n"]}